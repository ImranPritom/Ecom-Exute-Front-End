generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model brand {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamp(6)
  brand_name String?   @unique @db.VarChar
  product    product[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model category {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at    DateTime  @default(now()) @db.Timestamp(6)
  catrgory_name String?   @unique @db.VarChar
  product       product[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model product {
  id                  String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at          DateTime        @default(now()) @db.Timestamp(6)
  product_name        String?         @db.VarChar
  product_description String?
  price               Int?
  stock               Int?
  category_id         String?         @db.Uuid
  brand_id            String?         @db.Uuid
  user_id             String?         @db.Uuid
  brand               brand?          @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  category            category?       @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                user?           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product_image       product_image[]
  review              review[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model product_image {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  image_url  String?  @db.VarChar
  product_id String?  @db.Uuid
  product    product? @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model review {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at      DateTime @default(now()) @db.Timestamp(6)
  product_star    Int?     @db.SmallInt
  product_comment String?
  product_id      String?  @db.Uuid
  product         product? @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  first_name   String?   @db.VarChar
  last_name    String?   @db.VarChar
  email        String    @unique @db.VarChar
  phone_number String?   @unique @db.VarChar
  address      String?
  created_at   DateTime  @default(now()) @db.Timestamp(6)
  role         String    @db.VarChar
  password     String?   @db.VarChar
  product      product[]
}
